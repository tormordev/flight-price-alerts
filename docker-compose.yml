networks:
  app-network:
    driver: bridge

services:
  nginx:
    image: nginx:latest  # Use the official Nginx image
    container_name: nginx_travelbuddy
    ports:
      - "80:80"  # Expose port 80 for Nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro  # Mount the custom Nginx config
      - ./frontend/build:/usr/share/nginx/html:ro  # Mount the React build folder
      - ./backend/app/static:/app/static  # Optional: Serve backend static files
      - ./backend/app/media:/app/media    # Optional: Serve backend media files
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    container_name: backend_travelbuddy
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - PYTHONPATH=/app
      - LOG_LEVEL=info  
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network
  
  db:
    image: postgres:15
    container_name: flight_db
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  celery_worker:
    build:
      context: ./backend
    container_name: celery_worker
    command: celery -A app.celery_worker worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - PYTHONPATH=/app
      - LOG_LEVEL=info  
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - backend
    networks:
      - app-network

  celery_beat:  
    build:
      context: ./backend
    container_name: celery_beat
    command: celery -A app.celery_worker beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - PYTHONPATH=/app
      - LOG_LEVEL=info  
    env_file:
      - .env
    depends_on:
      - redis
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: frontend_travelbuddy
    ports:
      - "3000:80"
    environment:
      - REACT_APP_BACKEND_URL=http://backend:8000  # Configure the backend API URL
    networks:
      - app-network

volumes:
  postgres_data:
